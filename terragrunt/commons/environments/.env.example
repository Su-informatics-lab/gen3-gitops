# Environment Variables Template for Gen3 Terragrunt Deployment
# Copy this file to .env and fill in the actual values
# DO NOT commit the .env file to version control

# AWS Account ID for state bucket naming
# export AWS_ACCOUNT_ID="REPLACE_WITH_AWS_ACCOUNT_ID"

# CSOC Account ID (for security and access control)
# export CSOC_ACCOUNT_ID="REPLACE_WITH_CSOC_ACCOUNT_ID"

# Database passwords (32+ character random strings recommended)
# export DB_PASSWORD_FENCE="REPLACE_WITH_STRONG_PASSWORD"
# export DB_PASSWORD_PEREGRINE="REPLACE_WITH_STRONG_PASSWORD"
# export DB_PASSWORD_SHEEPDOG="REPLACE_WITH_STRONG_PASSWORD"
# export DB_PASSWORD_INDEXD="REPLACE_WITH_STRONG_PASSWORD"

# Encryption keys (32 alphanumeric characters)
# export HMAC_ENCRYPTION_KEY="REPLACE_WITH_32_CHAR_KEY"
# export SHEEPDOG_SECRET_KEY="REPLACE_WITH_SECRET_KEY"
# export SHEEPDOG_INDEXD_PASSWORD="REPLACE_WITH_PASSWORD"

# OAuth2 credentials
# export SHEEPDOG_OAUTH2_CLIENT_ID="REPLACE_WITH_CLIENT_ID"
# export SHEEPDOG_OAUTH2_CLIENT_SECRET="REPLACE_WITH_CLIENT_SECRET"

# Google OAuth credentials (if using Google authentication)
# export GOOGLE_CLIENT_ID="REPLACE_WITH_GOOGLE_CLIENT_ID"
# export GOOGLE_CLIENT_SECRET="REPLACE_WITH_GOOGLE_CLIENT_SECRET"

# Fence credentials for S3 access
# export FENCE_ACCESS_KEY="REPLACE_WITH_ACCESS_KEY"
# export FENCE_SECRET_KEY="REPLACE_WITH_SECRET_KEY"

# Slack webhook URLs (for notifications)
# export SLACK_WEBHOOK="https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
# export SECONDARY_SLACK_WEBHOOK="https://hooks.slack.com/services/YOUR/SECONDARY/WEBHOOK"

# Mailgun configuration
# export MAILGUN_API_KEY="REPLACE_WITH_MAILGUN_API_KEY"

# SSH keys for Kubernetes nodes
# export KUBE_SSH_KEY="REPLACE_WITH_SSH_PUBLIC_KEY"
# export KUBE_ADDITIONAL_KEYS="- ssh-rsa AAAA... user1@example.com\n- ssh-rsa BBBB... user2@example.com"

# Activation credentials (if using FIPS)
# export ACTIVATION_ID="REPLACE_WITH_ACTIVATION_ID"
# export CUSTOMER_ID="REPLACE_WITH_CUSTOMER_ID"

# Usage Instructions:
# 1. Copy this file: 
#    Windows: copy .env.example .env
#    Linux/Mac: cp .env.example .env
# 2. Replace all REPLACE_WITH_* values with actual values
# 3. Set environment variables:
#    Windows PowerShell: Load variables from .env or set individually
#    Linux/Mac: source .env
# 4. Run Terragrunt commands: terragrunt plan, terragrunt apply, etc.
#
# Windows PowerShell Example:
# $env:AWS_ACCOUNT_ID="123456789012"
# $env:DB_PASSWORD_FENCE="your-actual-password"
#
# Linux/Mac Example:
# source .env

# Security Notes:
# - Never commit the .env file to version control
# - Use strong, randomly generated passwords and keys
# - Consider using AWS Secrets Manager or similar for production
# - Rotate credentials regularly
# - Use least privilege IAM policies

# Mailgun configuration
export MAILGUN_API_KEY="REPLACE_WITH_MAILGUN_API_KEY"

# SSH keys for Kubernetes nodes
export KUBE_SSH_KEY="REPLACE_WITH_SSH_PUBLIC_KEY"
export KUBE_ADDITIONAL_KEYS="- ssh-rsa AAAA... user1@example.com\n- ssh-rsa BBBB... user2@example.com"

# Fence credentials for S3 access
export FENCE_ACCESS_KEY="REPLACE_WITH_ACCESS_KEY"
export FENCE_SECRET_KEY="REPLACE_WITH_SECRET_KEY"

# Activation credentials (if using FIPS)
export ACTIVATION_ID="REPLACE_WITH_ACTIVATION_ID"
export CUSTOMER_ID="REPLACE_WITH_CUSTOMER_ID"

# CSOC Account ID (for security and access control)
export CSOC_ACCOUNT_ID="REPLACE_WITH_CSOC_ACCOUNT_ID"

# AWS credentials (if not using instance profiles or AWS CLI)
# export AWS_ACCESS_KEY_ID="REPLACE_WITH_ACCESS_KEY"
# export AWS_SECRET_ACCESS_KEY="REPLACE_WITH_SECRET_KEY"
# export AWS_SESSION_TOKEN="REPLACE_WITH_SESSION_TOKEN"  # if using temporary credentials

# Terragrunt logging level (optional)
# export TERRAGRUNT_LOG_LEVEL="info"  # Options: trace, debug, info, warn, error

# Usage Instructions:
# 1. Copy this file: 
#    Windows: copy .env.example .env
#    Linux/Mac: cp .env.example .env
# 2. Replace all REPLACE_WITH_* values with actual values
# 3. Set environment variables:
#    Windows PowerShell: Load variables from .env or set individually
#    Linux/Mac: source .env
# 4. Run Terragrunt commands: terragrunt plan, terragrunt apply, etc.
#
# Windows PowerShell Example:
# $env:DB_PASSWORD_FENCE="your-actual-password"
# $env:HMAC_ENCRYPTION_KEY="your-32-char-key"
#
# Linux/Mac Example:
# source .env

# Security Notes:
# - Never commit the .env file to version control
# - Use strong, randomly generated passwords and keys
# - Consider using AWS Secrets Manager or similar for production
# - Rotate credentials regularly
# - Use least privilege IAM policies
